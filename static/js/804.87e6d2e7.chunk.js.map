{"version":3,"file":"static/js/804.87e6d2e7.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.js","components/Loader/loader.jsx","redux/contacts/selectors.js","components/ContactsForm/ContactsForm.styled.js","components/ContactsForm/ContactsForm.jsx","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  margin: 0 auto;\n  width: 100px;\n  margin-top: 20px;\n`;\n","import { Circles, Dna } from 'react-loader-spinner';\n\nimport { Wrapper } from './Loader.styled';\n\nexport const Spiner = () => {\n  return (\n    <Wrapper>\n      <Dna\n        visible={true}\n        height=\"120\"\n        width=\"120\"\n        ariaLabel=\"dna-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"dna-wrapper\"\n      />\n    </Wrapper>\n  );\n};\n\nexport const Loader = () => {\n  return (\n    <Wrapper>\n      <Circles\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"comment-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"comment-wrapper\"\n        color=\"#272727\"\n        backgroundColor=\"#F4442E\"\n      />\n    </Wrapper>\n  );\n};\n\n// export default Loader;\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectGetContacts = state => state.contacts.contacts;\nexport const selectContactsFilter = state => state.filter.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectFilteredContacts = createSelector(\n  [selectGetContacts, selectContactsFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(filter.toLocaleLowerCase())\n    );\n  }\n);","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n\n  align-items: center;\n  border: 1px solid transparent;\n  color: black;\n  background-color: #d5f9ed;\n  border-radius: 8px;\n  padding: 8px 16px;\n  margin: 20px 20px 30px 20px;\n  cursor: pointer;\n  transition: all 0.3s linear 0s;\n  box-shadow: rgb(67, 135, 112) 9px 9px 18px, rgb(149, 255, 248) -9px -9px 18px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  padding: 10px;\n\n  input {\n    padding: 6px 10px;\n    border-radius: 8px;\n    border: 1px solid #ccc;\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  -webkit-box-pack: center;\n  justify-content: center;\n  -webkit-box-align: center;\n  align-items: center;\n  font-size: 18px;\n  border: 1px solid transparent;\n  color: black;\n  background-color: aquamarine;\n  border-radius: 8px;\n  padding: 8px 16px;\n  margin: 20px 20px 30px 20px;\n  cursor: pointer;\n  transition: all 0.3s linear 0s;\n  box-shadow: rgb(67, 135, 112) 9px 9px 18px, rgb(149, 255, 248) -9px -9px 18px;\n\n  &:hover {\n    background-color: #60bc9d;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { addContacts } from 'redux/contacts/operation';\nimport { selectGetContacts } from 'redux/contacts/selectors';\n\nimport Notiflix from 'notiflix';\n\nimport { Label, Button, Form } from './ContactsForm.styled';\n\nconst ContacsForm = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectGetContacts);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    if (name === 'name') setName(value);\n    if (name === 'number') setNumber(value);\n  };\n\n  const handleSubmitContacts = evt => {\n    evt.preventDefault();\n\n    const findSomeName = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (findSomeName) {\n      return Notiflix.Notify.warning(`${name} is already in contacts`);\n    }\n\n    const newContact = {\n      name: name,\n      number: number,\n    };\n\n    dispatch(addContacts(newContact));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmitContacts}>\n      <Label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          value={name}\n          onChange={handleChange}\n          required\n        />\n      </Label>\n      <Label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          value={number}\n          onChange={handleChange}\n          required\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n\nexport default ContacsForm;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  align-items: center;\n  font-size: 14px;\n  border: 1px solid transparent;\n  color: black;\n  background-color: aquamarine;\n  border-radius: 8px;\n  padding: 8px 16px;\n  margin: 10px 10px 15px 10px;\n  cursor: pointer;\n  transition: all 0.3s linear 0s;\n\n  &:hover {\n    background-color: #60bc9d;\n  }\n`;\n\nexport const ErrorMessage = styled.p`\n  font-weight: 200;\n  font-size: 40px;\n  text-align: center;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\nimport { deleteContact, getAllContacts } from 'redux/contacts/operation';\n\nimport { Button } from './ContactItem.styled';\n\nconst ContactItem = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectFilteredContacts);\n\n  useEffect(() => {\n    dispatch(getAllContacts());\n  }, [dispatch]);\n\n  return (\n    <ul>\n      {contacts.map(contact => (\n        <li key={contact.id}>\n          {contact.name}: {contact.number}\n          <Button\n            type=\"button\"\n            onClick={() => dispatch(deleteContact(contact.id))}\n          >\n            Delete\n          </Button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactItem;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  align-items: center;\n  font-size: 18px;\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  padding: 10px;\n\n  input {\n    padding: 8px 15px;\n    border-radius: 8px;\n    border: 1px solid #ccc;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { filteredContacts } from 'redux/contacts/FilterReducer';\nimport { selectContactsFilter } from 'redux/contacts/selectors';\n\nimport { Label } from './Filter.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const filter = useSelector(selectContactsFilter);\n\n  const handleFilterChange = e => {\n    dispatch(filteredContacts(e.target.value));\n  };\n\n  return (\n    <Label>\n      Find contacts by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleFilterChange}\n      />\n    </Label>\n  );\n};\n\nexport default Filter;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport ContacsForm from 'components/ContactsForm/ContactsForm';\nimport ContactItem from 'components/ContactItem/ContactItem';\nimport Filter from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/loader';\nimport { getAllContacts } from 'redux/contacts/operation';\nimport { selectIsLoading } from 'redux/contacts/selectors';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(getAllContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <ContacsForm />\n      <Filter />\n      {isLoading && <Loader />}\n      <ContactItem />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","Spiner","_jsx","children","Dna","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","Loader","Circles","color","backgroundColor","selectGetContacts","state","contacts","selectContactsFilter","filter","selectIsLoading","isLoading","selectFilteredContacts","createSelector","contact","name","toLocaleLowerCase","includes","Form","Label","_templateObject2","Button","_templateObject3","dispatch","useDispatch","useSelector","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","handleChange","event","_event$target","target","value","_jsxs","onSubmit","evt","preventDefault","some","toLowerCase","Notiflix","concat","newContact","addContacts","type","pattern","title","onChange","required","useEffect","getAllContacts","map","onClick","deleteContact","id","e","filteredContacts","_Fragment","ContacsForm","Filter","ContactItem"],"sourceRoot":""}